#!/bin/bash
#
# (c) Copyright 2015-2017 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Called by CI infrastructure to run the cobber CI
#

set -eux
set -o pipefail

eval "$($(dirname "$(readlink -e "${BASH_SOURCE[0]}")")/ardana-env)"

SCRIPT_NAME=$(basename $0)
SCRIPT_HOME=$(cd $(dirname $0) ; pwd)

export ARDANAUSER=${ARDANAUSER:-stack}

usage() {
    set +x
    echo "$(basename $0) [cloud]"
    echo
    echo "cloud defaults to deployerincloud"
    echo
    echo "--ci                -- Set options for running in the CI mode"
    echo "--no-setup          -- Don't run dev-env-install.yml"
    echo "--no-build          -- Don't build venvs, reuse existing packages"
    echo "--tarball <tarball> -- Use the specified deployer tarball"
    echo "--hlinux-control    -- Enable hLinux control re-imaging."
    echo "--hlinux-compute    -- Enable hLinux compute re-imaging."
    echo "--rhel-compute      -- Enable RHEL compute re-imaging."
    echo "--sles-control      -- Enable SLES control re-imaging."
    echo "--sles-compute      -- Enable SLES compute re-imaging."
}

TEMP=$(getopt -o -h -l help,ci,no-setup,no-build,tarball:,hlinux-compute,hlinux-control,rhel-compute,sles-compute,sles-control -n $SCRIPT_NAME -- "$@")
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi
# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

args=(
    --no-config
    --no-site
)

while true ; do
    case "$1" in
        -h | --help) usage ; exit 0 ;;
        --ci)
            # Needed for verify-bm-install
            export ARDANAUSER=ardanauser
            args+=( $1 )
            shift ;;
        --hlinux-control)
            args+=( --cobble-hlinux-control )
            shift ;;
        --hlinux-compute)
            args+=( --cobble-hlinux-compute )
            shift ;;
        --rhel-compute)
            args+=( --cobble-rhel-compute )
            shift ;;
        --sles-control)
            args+=( --cobble-sles-control )
            shift ;;
        --sles-compute)
            args+=( --cobble-sles-compute )
            shift ;;
        --no-setup|--no-build)
            args+=( $1 )
            shift ;;
        --tarball)
            args+=( $1 $2 )
            shift 2;;
        --) shift ; break;;
        *) break ;;
    esac
done

args+=(
    --skip-extra-playbooks
    --cobble-all-nodes
)

set -x

CLOUDNAME=${1:-deployerincloud}
args+=( $CLOUDNAME )


export ARDANA_PACKAGES_DIST='["packager", "ansible", "ardana-service", "config_processor", "installer-server", "installer-ui"]'
export ARDANA_PACKAGES_NONDIST='[]'

source $SCRIPT_HOME/libci.sh

pushd $DEVTOOLS/ardana-vagrant-models/${CLOUDNAME}-vagrant

# Bring up the system
$SCRIPT_HOME/astack.sh "${args[@]}"

$SCRIPT_HOME/verify-bm-install $CLOUDNAME

# vim:shiftwidth=4:tabstop=4:expandtab
