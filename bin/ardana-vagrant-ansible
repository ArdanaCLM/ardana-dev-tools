#!/bin/bash -eu
#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Run ansible-playbook against vagrant cloud using cached environment settings
# Must be in an ardana-vagrant-models/<cloud>-vagrant directory
#

set -eu
set -o pipefail

_tools_bin_dir="$(dirname "$(readlink -e "${BASH_SOURCE[0]}")")"
_tools_ansible_dir="$(dirname "${_tools_bin_dir}")/ansible"
_cmd_name="$(basename "${0}")"

eval "$(${_tools_bin_dir}/ardana-env)"

usage()
{
    cat - << _EOF_
Usage:
    ${_cmd_name} [--skip-ardana-init] [-i inventory_file] [options] [playbook]

See ansible-playbook(1) for other possible options.

Automatically specifies the deployer_node variable setting via a -e option,
and the vagrant.py dynamic inventory file if none has been specified.

If no playbook is specified will default to running the cloud-setup.yml
playbook if running in SOC/CLM deployment mode.
_EOF_
}

skip_tags_arg=
inventory_file=
args=()
while (( $# > 0 ))
do
    case "${1}" in
    (-h|--help|--usage)
        usage
        exit 0
        ;;
    (--skip-ardana-init)
        skip_tags_arg="${skip_tags_arg:+${skip_tags_arg},}${1:2}"
        shift
        ;;
    (-i|--inventory-file)
        inventory_file="${2}"
        shift 2
        ;;
    (--inventory-file=*)
        inventory_file="${1#*=}"
        shift
        ;;
    (*)
        args+=( "${1}" )
        shift
        ;;
    esac
done

# reset args to just those we are passing through
set +u
set -- "${args[@]}"
set -u

# if no inventory file specified, default to the vagrant.py one
inventory_file="${_tools_ansible_dir}/hosts/vagrant.py"

source ${_tools_bin_dir}/libci.sh

ensure_in_vagrant_dir "${_cmd_name}"

ensure_astack_env_exists

source ${ARDANA_ASTACK_ENV}

# if not even a playbook is specified, and this is a SOC/CLM cloud,
# default to running cloud-setup.yml
if (( $# < 1 )); then
    set -- ${_tools_ansible_dir}/cloud-setup.yml
fi

# specify inventory file and deployer_node var setting as initial
# arguments when calling ansible-playbook
ap_args=(
    -i ${inventory_file}
    -e deployer_node="$(get_deployer_node)"
)

# optionally include the --skip-tags opts if needed
if [[ -n "${skip_tags_arg:-}" ]]; then
    ap_args+=( --skip-tags "${skip_tags_arg}" )
fi

# run ansible-playbook with configured arguments and any additional
# arguments the user may have specified.
${DEBUG:+echo} ansible-playbook \
    ${ap_args[@]} \
    "${@}"

# vim:shiftwidth=4:tabstop=4:expandtab
