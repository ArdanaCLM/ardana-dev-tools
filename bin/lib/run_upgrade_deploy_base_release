#!/bin/bash
#
# (c) Copyright 2015-2017 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Called in CI - bin/run-upgrade script
#

set -eu
set -o pipefail

export SCRIPT_HOME=$(cd $(dirname $0)/.. ; pwd)
source $SCRIPT_HOME/libci.sh

CLOUDNAME=$1

# Specify that we want to us the artifact download by
# get-release-artifacts
export ARDANA_USE_RELEASE_ARTIFACT=${2:-release.iso}

pushd $DEVTOOLS/ansible

# Determine Ardana release for ISO we are upgrading from
_ardana_ver=$(python -c "import yaml ; print yaml.load(open('roles/artifacts/defaults/main.yml'))['artifacts']['$ARDANA_USE_RELEASE_ARTIFACT']['url'].split('/')[4]")

# Determine the RHEL ISO version
_rhel_ver=$(python -c "import yaml ; print yaml.load(open('roles/apt-repos/tasks/get-rhel7-iso.yml'))[0]['vars']['artifact'].split('-')[1]")

# Clear env settings associated with compute platforms not supported
# by particular releases
export ARDANA_UPGRADE_NO_RHEL=
export ARDANA_UPGRADE_NO_SLES=
case "$_ardana_ver" in
(*ardana-0.6*)
	# No RHEL or SLES support
	ARDANA_UPGRADE_NO_RHEL=true
	ARDANA_UPGRADE_NO_SLES=true
	;;
(*ardana-0.7*|*ardana-0.8*)
	# RHEL but no SLES support
	ARDANA_UPGRADE_NO_SLES=true
	;;
(*ardana-0.9*)
	# Includes RHEL and SLES support
	;;
esac

case "$_rhel_ver" in
(7.2)
	;;
(*)
	# Upgrade only supported for RHEL 7.2
	ARDANA_UPGRADE_NO_RHEL=true
	;;
esac

ansible-playbook -i hosts/localhost get-release-artifacts.yml \
    -e artifact_key=$ARDANA_USE_RELEASE_ARTIFACT

# We need to get the refrence model to run the upgrade from
# and to.
export ARDANA_REF_MODEL_TAG=\
$(python -c "import yaml ; print yaml.load(open('roles/artifacts/defaults/main.yml'))['artifacts']['$ARDANA_USE_RELEASE_ARTIFACT']['ardana-input-model']['branch']")
popd

# Don't build latest deployer package during the release
# version deployment
export ARDANA_BUILD_PACKAGE=False
# We aren't guaranteed that the qa repos are setup yet
export ARDANA_NO_SETUP_QA=1

# Bring up the cloud.
# CI is specified or not via the run-upgrade script
$SCRIPT_HOME/astack.sh --no-setup --no-build $CLOUDNAME
