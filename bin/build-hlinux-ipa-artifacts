#!/bin/bash

#
# Called by CI
#
IPA_IMAGE_NAME="ironic-deploy"

set -eux
set -o pipefail

eval "$($(dirname "$(readlink -e "${BASH_SOURCE[0]}")")/ardana-env)"

DEVTOOLS_DIR=$(cd $(dirname "$0")/.. && pwd)

## Needed to create ansible venv
pushd $DEVTOOLS_DIR/ansible
ansible-playbook -i hosts/localhost dev-env-install.yml
popd

source "$(dirname $0)"/libci.sh

IPA_OUTPUT_DIR="${IPA_OUTPUT_DIR:-$HOME/.cache/ardana/images}"

pushd $DEVTOOLS_DIR/ansible
ansible-playbook -i hosts/localhost get-hlinux-iso.yml \
                 -e hlinux_artefacts_dir="$IPA_OUTPUT_DIR"
ansible-playbook -i hosts/localhost ironic-deploy-image-build.yml \
                 -e image_build_output_dir="$IPA_OUTPUT_DIR" \
                 -e ironic_deploy_image_name="$IPA_IMAGE_NAME"
popd
${DEVTOOLS_DIR}/bin/gen_ipa_iso.sh \
      -i ${IPA_OUTPUT_DIR}/${IPA_IMAGE_NAME}.initramfs \
      -k ${IPA_OUTPUT_DIR}/${IPA_IMAGE_NAME}.kernel \
      -I ${IPA_OUTPUT_DIR}/hlinux.iso \
      -o ${IPA_OUTPUT_DIR}/${IPA_IMAGE_NAME}.iso

rm -Rf ${IPA_OUTPUT_DIR}/hlinux.iso

pushd ${IPA_OUTPUT_DIR}
tar -zcvf ${IPA_IMAGE_NAME}.tgz \
          ${IPA_IMAGE_NAME}.initramfs \
          ${IPA_IMAGE_NAME}.kernel \
          ${IPA_IMAGE_NAME}.iso
mv ${IPA_IMAGE_NAME}.tgz ${IPA_IMAGE_NAME}-$(/bin/date +%Y%m%d_%H%M%S).tgz
popd
