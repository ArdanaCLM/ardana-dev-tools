#
# (c) Copyright 2015-2017 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017-2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Specify defaults for the developer environment
---
dev_env_git_servers:
  gozer: "https://gerrit.prv.suse.net"
  gerrit: "https://gerrit.prv.suse.net"
  github: "https://github.com"
  openstack: "https://git.openstack.org"

dev_env_global_git_update: "{{ lookup('env', 'ARDANA_GIT_UPDATE') | default('yes', true) }}"

dev_env_git_timeout: 900

# Working dir is ardana-dev-tools, sources dir is a level above thanks to the dirname
dev_env_working_dir: "{{ playbook_dir | dirname }}"
dev_env_scratch_dir: "{{ dev_env_working_dir }}/scratch-{{ product_cache_directory_basename }}"
dev_env_sources_dir: "{{ dev_env_working_dir | dirname }}"

dev_env_site_config_default: "{{ sites[site] }}"

dev_env_site_config: "{{ dev_env_site_config_default |
                        update(dev_env_site_config_update | default({})) }}"
dev_env_default_git_server: "{%- if dev_env_site_config.git is defined -%}git://{{ dev_env_site_config.git.host }}{%- else -%}{{ dev_env_git_servers.gozer }}{%- endif -%}"

site: "{{ lookup('env','ARDANA_SITE') |
          default('provo', true) }}"

dev_env_ansible_version: "{{ lookup('env', 'ARDANA_ANSIBLE_VERSION') | default('2.4.6', true) }}"
detected_ansible_version: "{{ lookup('pipe', 'command ansible --version').split('\n')[0].split(' ') | last }}"
dev_env_cache_ansible_venv: "{{ product_cache_base_directory }}/venvs/ansible-{{ dev_env_ansible_version }}"
dev_env_ansible_venv: "{{ dev_env_working_dir }}/tools/venvs/ansible"

dev_env_artifact_branch: "{{ product_branch }}"

dev_env_ext_net:
  bridge_ip: 169.254.1.1
  vlan: 103
  netmask:
    - 172.31.0.1/16

dev_env_provider_net:
  bridge_ip: 192.168.245.1
  octavia_net:
    - netmask: 172.30.1.1/24
      vlan: 106

# Name of cloud we are testing
dev_env_cloud_name: "{{ lookup('env', 'ARDANA_CLOUD_NAME') | default('adt', true) }}"

# Vagrant directory used for the cloud deployment
dev_env_vagrant_dir: >-
  {{ lookup('env', 'ARDANA_VAGRANT_DIR') |
     default([dev_env_working_dir, 'ardana-vagrant-models',
              dev_env_cloud_name ~ '-vagrant'] | join('/'), true) }}
dev_env_vagrant_file: "{{ dev_env_vagrant_dir }}/Vagrantfile"
dev_env_input_model: "{{ dev_env_vagrant_dir }}/input-model"
dev_env_servers_yml: "{{ dev_env_input_model }}/data/servers.yml"

# Should we attach the ISOs to the deployer node?
dev_env_attach_isos: "{{ lookup('env', 'ARDANA_ATTACH_ISOS') | default(False, true) }}"

# Should we download pre-built qcow2 images, or build them locally
dev_env_use_prebuilt_images: "{{ lookup('env', 'ARDANA_PREBUILT_IMAGES') | default(False, true) }}"

# Should we disable Spectre V2 mitigations or not when building qcow2 images locally
dev_env_disable_spectrev2_in_images: "{{ lookup('env', 'ARDANA_DISABLE_SPECTREV2') | default(False, true) }}"

# Should we download ISOs
dev_env_download_isos: "{{ (dev_env_attach_isos | bool) or not (dev_env_use_prebuilt_images | bool) }}"

# Should we use SOC/CLM artifacts and deployer setup
dev_env_use_cloud_artifacts: "{{ lookup('env', 'ARDANA_CLOUD_ARTIFACTS') | default(False, true) }}"

# Should we use RHEL artifacts in build
dev_env_use_rhel7_artifacts: "{{ lookup('env', 'ARDANA_RHEL_ARTIFACTS') | default(False, true) }}"

# Should we use SLES artifacts in build
dev_env_use_sles12_artifacts: "{{ lookup('env', 'ARDANA_SLES_ARTIFACTS') | default(False, true) }}"
dev_env_use_sles12_net_repos: "{{ lookup('env', 'ARDANA_SLES_NET_REPOS') | default(True, true) }}"

# Should we use Guest image artifacts in build (e.g for Octavia etc)
dev_env_use_guest_image_artifacts: "{{ lookup('env', 'ARDANA_GUEST_IMAGE_ARTIFACTS') | default(False, true) }}"

# Variable to indicate when we are running in CI.
# We may want to do things slightly different
dev_env_in_ci: "{{ lookup('env', 'CI') | default(False, true) }}"

# Variable to indicate when we are running in Developer mode
dev_env_in_developer:  "{{ lookup('env', 'ARDANA_DEVELOPER') | default(False, true) }}"

# Variable to indicate if we should setup QA run time env
dev_env_no_setup_qa: "{{ lookup('env', 'ARDANA_NO_SETUP_QA') | default(False, true) }}"

# DevEnv handles for product cache directories
dev_env_product_artifacts: "{{ product_cache_directory }}/artifacts"
dev_env_product_boxes: "{{ product_cache_directory }}/boxes"
dev_env_product_images: "{{ product_cache_directory }}/images"

# Variables tracking any provide OBS or IBS repos, if specified
_dev_env_ibs_repos: "{{ lookup('env', 'ARDANA_IBS_REPOS') | default('', true) }}"
dev_env_bs_distro: "SLE_{{ sles_major }}_SP{{ sles_sp }}"
dev_env_ibs:
  base_url: "http://{{ dev_env_site_config.ibs.main }}/{{ dev_env_site_config.ibs.path }}"
  repos: "{{ (_dev_env_ibs_repos | length) | ternary(_dev_env_ibs_repos.split(','), []) }}"
_dev_env_obs_repos: "{{ lookup('env', 'ARDANA_OBS_REPOS') | default('', true) }}"
dev_env_obs:
  base_url: "http://{{ dev_env_site_config.obs.main }}/{{ dev_env_site_config.obs.path }}"
  repos: "{{ (_dev_env_obs_repos | length) | ternary(_dev_env_obs_repos.split(','), []) }}"

# Settings used by the cobbler PXE boot testing process
dev_env_vm_pxe_setting: true
dev_env_cobbler_nodes: "{{ lookup('env', 'ARDANA_COBBLER_NODES') }}"

# General settings
dev_env_cloud_user: "{{ lookup('env','ARDANAUSER') | default('ardana', true) }}"
dev_env_ssh_conf_name: "{{ lookup('env','ARDANA_VAGRANT_SSH_CONFIG') | default('astack-ssh-config', true) }}"
dev_env_ssh_conf_file: "{{ dev_env_vagrant_dir }}/{{ dev_env_ssh_conf_name }}"
