#
# (c) Copyright 2015 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Setup the apt repository on the remote node as necessary
---

# BUG-626 Note that vagrant-proxyconf plugin generates the /etc/apt/apt.conf.d/01-proxy
# We want to configure
- name: vagrant-vm | setup-apt | Direct to apt host
  become: yes
  shell: |
    echo "Acquire::http::Proxy::{{ dev_env_site_config['apt']['host'] }} DIRECT;" > /etc/apt/apt.conf.d/02-proxy
  when: not ('proxy' in dev_env_site_config['apt'])

- name: vagrant-vm | setup-apt | Proxy to apt
  become: yes
  shell: |
    echo "Acquire::http::Proxy \"{{ dev_env_site_config['apt']['proxy'] }}\";" > /etc/apt/apt.conf.d/02-proxy
  when: ( 'proxy' in dev_env_site_config['apt'] )

- name: vagrant-vm | setup-apt | Remove sources.list
  become: yes
  file:
    path: "/etc/apt/sources.list"
    state: absent

- name: vagrant-vm | setup-apt | Setup enabled apt sources
  become: yes
  apt_repository:
    repo: "{{ item.repo }}"
    update_cache: no
  with_items: apt_config | default({}) | collect(['enabled']) | list
  register: _apt_repository_result

- name: vagrant-vm | setup-apt | Setup apt repository priority preferences
  become: yes
  template:
    src: "priority.d.j2"
    dest: "/etc/apt/preferences.d/{{ item.origin | replace('http://', '') | replace('.', '_') | replace('-', '_') | replace('/', '_') }}"
  when: ( item.priority is defined ) and ( item.origin is defined )
  with_items: apt_config | default({}) | collect(['enabled']) | list
  register: _apt_repository_priority_result

- name: vagrant-vm | setup-apt | Test cdrom present
  stat:
    path: "{{ vagrant_vm_cdrom_dev }}"
  register: _cdrom_present_result

# If we are upgrading a existing system via a re-provision then we
# don't want to add the cdrom back in as a apt source.
# This is so that we mimic the real-metal deployment work flow.
- name: vagrant-vm | setup-apt | Test existing apt repo present
  stat:
    path: "{{ vagrant_vm_existing_apt_repo }}"
  register: _existing_apt_repo_result

- name: vagrant-vm | setup-apt | Add cdrom if present
  become: yes
  shell: |
    set -eu
    apt-cdrom add --cdrom {{ vagrant_vm_cdrom_mount_path }} -m -f
  when: _cdrom_present_result.stat.exists
        and not _existing_apt_repo_result.stat.exists

- name: vagrant-vm | setup-apt | Add architecture to cdrom configuration
  become: yes
  replace:
    backup: no
    dest: "/etc/apt/sources.list"
    regexp: "deb (cdrom:.*)"
    replace: 'deb [arch=amd64] \1'
  when: _cdrom_present_result.stat.exists
        and not _existing_apt_repo_result.stat.exists

- name: vagrant-vm | setup-apt | Update hlinux apt repository
  become: yes
  shell: |
    apt-get update
  when: _apt_repository_result.changed
        or _apt_repository_priority_result.changed
        or ( _cdrom_present_result.stat.exists and not _existing_apt_repo_result.stat.exists )
