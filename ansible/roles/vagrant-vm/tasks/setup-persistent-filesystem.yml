#
# (c) Copyright 2015 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Setup the local volume that holds the ccache data
---

# Resize filesystem, just in case the size of the persistent volume changes
- name: vagrant-vm | setup-persistent-filesystem | Setup {{ device }} as filesystem
  become: yes
  shell: |
    set -eu

    filetype=$(file -s {{ device }} | awk '{print $2 $3}')
    if [ "$filetype" = "data" ] ; then
        mkfs.ext4 {{ device }}
    else
        if ! mount | grep -q {{ device }} ; then
            status=0
            e2fsck -f -y {{ device }} || status=$?
            if [ $status -ne 0 -a $status -ne 1 -a $status -ne 2 ]; then
                echo "Filesystem possible corrupted, please fix"
                exit 1
            fi
            resize2fs {{ device }}
        fi
    fi
  register: _file_system_corrupted_result
  ignore_errors: true

- name: vagrant-vm | setup-persistent-filesystem | Catch corrupted filesystems
  delegate_to: localhost
  shell: |
    virsh vol-delete --pool default {{ persistent_cache_qcow2 }}
    echo "Filesystem corrupted, removing {{ persistent_cache_qcow2 }}. Please run vagrant destroy ; vagrant up"
    exit 1
  when: _file_system_corrupted_result | failed

- name: vagrant-vm | setup-persistent-filesystem | Setup mount point
  become: yes
  file:
    path: "{{ persistent_dir }}"
    state: directory

- name: vagrant-vm | setup-persistent-filesystem | Setup /etc/fstab
  become: yes
  shell: |
    if ! grep -q ^{{ device }} /etc/fstab ; then
        printf "{{ device }}\t{{ persistent_dir }}\text4\tdefaults\t0\t1\n" >> /etc/fstab
    fi

- name: vagrant-vm | setup-persistent-filesystem | Mount /etc/fstab
  become: yes
  shell: |
    mount -a

- name: vagrant-vm | setup-persistent-filesystem | Test size of filesystem
  become: yes
  shell: |
    set -eu
    set -o pipefail

    df --output=size {{ persistent_dir }} | tail -n+2
  args:
    executable: "/bin/bash"
  register: _file_size_result
  when: persistent_min_size

- debug: var=_file_size_result
  when: persistent_min_size

- name: vagrant-vm | setup-persistent-filesystem | Catch small size volume
  delegate_to: localhost
  shell: |
    virsh vol-delete --pool default {{ persistent_cache_qcow2 }}
    echo "Filesystem too small, removing {{ persistent_cache_qcow2 }}. Please run vagrant destroy ; vagrant up"
    exit 1
  when: persistent_min_size and _file_size_result.stdout|int < persistent_min_size

- name: vagrant-vm | setup-persistent-filesystem | Test amount of free space on persistent volume
  become: yes
  shell: |
    set -eu
    set -o pipefail

    df --output=avail {{ persistent_dir }} | tail -n+2
  args:
    executable: "/bin/bash"
  register: _persistent_available_space_result
  when: persistent_cleanup_min_size

- debug: var=_persistent_available_space_result
  when: persistent_cleanup_min_size

- name: vagrant-vm | setup-persistent-filesystem | Check that we have at least 7G availabe space
  shell: |
    rm -fr {{ persistent_dir }}/*
  when: persistent_cleanup_min_size and _persistent_available_space_result.stdout|int < persistent_cleanup_min_size

- name: vagrant-vm | setup-persistent-filesystem | Setup permissions on persistent directory
  become: yes
  shell: |
    chown $SUDO_UID:$SUDO_GID {{ persistent_dir }}
