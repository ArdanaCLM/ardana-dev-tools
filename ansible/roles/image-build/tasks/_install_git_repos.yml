#
# (c) Copyright 2015-2017 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Clone or update the imagae building repositories
---

- include_vars: roles/image-build/defaults/git-repos.yml

- name: image-build | _install_git_repos | Warn user about using local source repos
  delegate_to: localhost
  debug:
    msg: >
      Using local copy of '{{ item.key }}' from path '{{ dev_env_sources_dir }}',
      abort now if this is not what you intended.
  register: _image_build_use_local_git_repositories
  when: item.key | isdir(dev_env_sources_dir)
  with_dict: image_build_git_repositories

- name: image-build | _install_git_repos | Pause to allow user abort
  delegate_to: localhost
  pause:
    seconds: 5
  when: _image_build_use_local_git_repositories | changed

# We reuse the tripleo image building tooling to create a vagrant box, so checkout the needed
# repositories
- name: image-build | _install_git_repos | Copy local image building repos to dest
  delegate_to: localhost
  synchronize:
    src: "{{ dev_env_sources_dir ~ '/' ~ item.key }}/"
    dest: "{{ item.value.dest ~ '/' ~ item.key }}"
    recursive: yes
    delete: yes
  when: item.key | isdir(dev_env_sources_dir)
  with_dict: image_build_git_repositories

- name: image-build | _install_git_repos | Cache image building repos if needed
  git:
    repo: "{{ item.value.url }}"
    dest: "{{ item.value | branched_cache_path }}"
    version: "{{ item.value.branch }}"
    update: "{{ image_build_git_update }}"
    force: yes
    accept_hostkey: yes
  when: not ( item.key | isdir(dev_env_sources_dir) )
  with_dict: image_build_git_repositories

- name: deployer | _install_git_repos | Sync image building repos to build dir
  delegate_to: localhost
  synchronize:
    src: "{{ item.value | branched_cache_path }}/"
    dest: "{{ item.value.dest ~ '/' ~ item.key }}"
    recursive: yes
    delete: yes
  when: not ( item.key | isdir(dev_env_sources_dir) )
  with_dict: image_build_git_repositories
