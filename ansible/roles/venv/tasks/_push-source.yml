#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Push the source onto the build vm.
# If it's changed, then it invalidates the markers
# for the wheels - to force a rebuild.
# Input:
#   source.name =
#   source.url =
#   source.dest =
#   source. ... =
---

# Change item 0
- name: venv | _push-source | Invalidate all wheels
  file:
    dest: "{{ VENV.WHEEL_DIR }}/{{ source.name }}.built"
    state: absent
  register: _venv_check_invalidate_result

# Change item 1
# This covers any changes made during the checkout of the repo during
# the get-venv-sources.yml stage.
- name: venv | _push-source | Check the source code against the build machine
  synchronize:
    src: "{{ source | find_local_repo }}/"
    dest: "{{ VENV.SRC_DIR }}/{{ source | venv_source_build_dest }}"
    # This looks for a non-git code change between local and remote
    rsync_opts: --exclude=.git* --dry-run
    copy_links: yes
  when: source.src is defined or source.url is defined
  register: _venv_git_synchronize_result

- name: venv | _push-source | Sync the source code onto the build machine
  synchronize:
    src: "{{ source | find_local_repo }}/"
    dest: "{{ VENV.SRC_DIR }}/{{ source | venv_source_build_dest }}"
    delete: yes
    copy_links: yes
  when: source.src is defined or source.url is defined

# Change item 3
- name: venv | _push-source | Register pip server details
  template:
    src: pip_server.j2
    dest: "{{ VENV.WHEEL_DIR }}/{{ source.name }}.pip_server"
  register: _venv_wheel_pips_server_result

# Record any upstream tags we care about
# This uses the pbr algorithm to calculate the top annotated tag.
- name: venv | _push-source | Examine upstream tag status
  shell: |
    if [ -d .git ]; then
      git describe --always --abbrev=0
      true
    fi
  args:
    chdir: "{{ VENV.SRC_DIR }}/{{ source | venv_source_build_dest }}"
  when: source.url is defined
  register: _venv_git_repo_upstream_tag_result

# Change item 4
- name: venv | _push-source | Register git repo URL
  template:
    src: git_details.j2
    dest: "{{ VENV.WHEEL_DIR }}/{{ source.name }}.git_details"
  register: _venv_git_repo_detail_result

- name: venv | _push-source | Mark what does not need to be built
  file:
    dest: "{{ VENV.WHEEL_DIR }}/{{ source.name }}.built"
    state: touch
  when: _venv_check_invalidate_result.changed and
        not _venv_git_synchronize_result.changed and
        not _venv_wheel_pips_server_result.changed and
        not _venv_git_repo_detail_result.changed and
        not rebuild

- name: venv | _push-source | Get stat on what is up to date
  stat:
    path: "{{ VENV.WHEEL_DIR }}/{{ source.name }}.built"
  register: _venv_built_stats_result
