#
# (c) Copyright 2015-2017 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017-2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Ardana venv variables
---

# When adding another service or packaged venv, list it here
# in order that it be built automatically, by default.
# Packages in the _dist list are distributed to customers
_packages_dist:
  - packager
  - ansible
  - keystone
  - nova
  - glance
  - neutron
  - cinder
  - cinderlm
  - swift
  - swiftlm
  - horizon
  - opsconsole-server
  - ironic
  - heat
  - ceilometer
  - monasca_ceilometer
  - tempest
  - config_processor
  - openstackclient
  - ceilometerclient
  - cinderclient
  - glanceclient
  - glance-check
  - heatclient
  - ironicclient
  - keystoneclient
  - neutronclient
  - novaclient
  - octavia
  - ops_console_content
  - ironic_deploy_images
  - swiftclient
  - monasca
  - monasca_api
  - monasca_agent
  - monasca_notification
  - monasca_transform
  - spark
  - monascaclient
  - beaver
  - kibana_450
  - logstash_232
  - elasticsearch_235
  - kronos
  - storevirtual-installer
  - installer-ui
  - ardana-service
  - freezer_api
  - freezer_agent
  - barbican
  - barbicanclient
  - designate
  - designateclient
  - magnum
  - magnumclient
  - sos

# Packages in the _nondist list are not meant for distribution to customers
_packages_nondist:
  - ardana_qa_tests_example
  - ardana_qa_swift
  - ardana_qa_logging
  - ardana_qa_neutron

# User specified package list via ARDANA_PACKAGES_DIST
_ardana_venv_packages_dist: "{{ lookup('env', 'ARDANA_PACKAGES_DIST') }}"
packages_dist: "{% if _ardana_venv_packages_dist != '' %}{{ _ardana_venv_packages_dist }}{% else %}{{ _packages_dist }}{% endif %}"

# User specified package list via ARDANA_PACKAGES_NONDIST
_ardana_venv_packages_nondist: "{{ lookup('env', 'ARDANA_PACKAGES_NONDIST') }}"
packages_nondist: "{% if _ardana_venv_packages_nondist != '' %}{{ _ardana_venv_packages_nondist }}{% else %}{{ _packages_nondist }}{% endif %}"

# Packages needed by debian
packages_dist_os_debian: "{{ packages_dist }}"

# Packages needed by redhat support
_packages_dist_os_redhat:
  - packager
  - nova
  - neutron
  - monasca_agent
  - beaver
  - freezer_agent
  - sos
packages_dist_os_redhat: "{% if _ardana_venv_packages_dist %}{{ _packages_dist_os_redhat | intersect(_ardana_venv_packages_dist) }}{% else %}{{ _packages_dist_os_redhat }}{% endif %}"

# Packages needed by Suse support
_packages_dist_os_suse:
  - packager
  - nova
  - neutron
  - monasca_agent
  - beaver
  - freezer_agent
  - sos
packages_dist_os_suse: "{{ packages_dist | difference(['storevirtual-installer']) }}"

# to handle external versus standard
packages_external_venv:
  - kibana_450
  - logstash_232
  - elasticsearch_235
  - monasca
  - ops_console_content
  - ironic_deploy_images
  - installer-ui
  - spark

# commenting out in favor of above RHEL names
# TBH we could just directly override this default from the
# command-line.
_timestamp: "{{ '%Y%m%dT%H%M%SZ' | time_format }}"
_suffix: "{{ package_version_suffix | default }}"
# Changing the package_version away from a timestamp could cause
# errors to the building of venv packages.
package_version: "{{ package_version_update | default(_timestamp + _suffix) }}"

_venv_service_branch_default: "{{ product_branch }}"
_venv_openstack_service_branch_default: "stable/pike"
_venv_eon_branch_default: "master"

# ardana-build-config is used to other CI jobs to configure
# the pypi repo. We need to use the same mirror has other
# test jobs.
_venv_ardana_build_config:
  ardana-build-config:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/ardana-build-config"

# List of global constraints for Ardana
_venv_global_constraints_sources:
  requirements:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/requirements"
    constraint: upper-constraints.txt
    build_type: noop

# Add the following to the sources or venv definitions in order
# to ignore the global constraints during a build:
#    ignore_constraints: true

# List of sources for Ardana
_venv_ardana_sources_default:
  ardana-service:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/ardana-service"

  barbican:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/barbican"

  barbicanclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-barbicanclient"

  ceilometer:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/ceilometer"

  ceilometerclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-ceilometerclient"

  monasca_ceilometer:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "https://github.com/openstack/monasca-ceilometer"

  ceph_common: # os specific

  certifi:
    # Our copy of certifi
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/certifi"

  cinder:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/cinder"

  cinderclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-cinderclient"

  cinderlm:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/cinderlm"

  designate:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/designate"

  designateclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-designateclient"

  designate_dashboard:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/designate-dashboard"

  designate_tempest_plugin:
    branch: "bbc01e351086f11ae7387ca0593f67e13d90a395"
    url: "{{ dev_env_default_git_server }}/openstack/designate-tempest-plugin"

  barbican_tempest_plugin:
    branch: "73402c7d285b12679a7ff143831c8856057ef026"
    url: "{{ dev_env_git_servers.github }}/openstack/barbican-tempest-plugin"

  django_openstack_auth:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/django_openstack_auth"

  # NOTE: HPE references in EON repo specs here are safe to keep,
  # in rebranding terms, as they are references to HPE's opensourced
  # version of the EON code as used in previous releases
  eonclient:
    branch: "{{ _venv_eon_branch_default }}"
    url: "{{ dev_env_git_servers.github }}/hpe-helion-os/python-hpeeonclient"

  freezer_agent:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/freezer"

  freezer_api:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/freezer-api"

  freezer_client:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-freezerclient"

  freezer_web_ui:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/freezer-web-ui"

  ardana-config-processor:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/ardana-configuration-processor"
    build_dir: "ConfigurationProcessor"

  horizon:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/horizon"

  glance:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/glance"

  glanceclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-glanceclient"

  glance-check:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/glance-check"

  glance_store:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/glance_store"

  heat:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/heat"

  heatclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-heatclient"

  heat_tempest_plugin:
    branch: "d908bef47d0809c52a43c38d7fc879a525b4580c"
    url: "{{ dev_env_git_servers.openstack }}/openstack/heat-tempest-plugin"

  ironic:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/ironic"

  ironicclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-ironicclient"

  ironic-ui:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/ironic-ui"

  keystone:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/keystone"

  keystoneclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-keystoneclient"

  keystonemiddleware:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/keystonemiddleware"

  kronos:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/monasca-log-api"

  libvirt_python: # os specific

  beaver:
    branch: "hp/prerelease/newton"
    url: "{{ dev_env_default_git_server }}/josegonzalez/python-beaver"

  logstash_formatter:
    branch: "hp/prerelease/newton"
    url: "{{ dev_env_default_git_server }}/vklochan/python-logstash"

  opsconsole-server:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/opsconsole-server"

  magnum:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/magnum"

  magnumclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-magnumclient"

  magnum_ui:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/magnum-ui"

  networking_generic_switch:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/networking-generic-switch"

  networking_infoblox:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/networking-infoblox"

  networking_l2gw:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/networking-l2gw"

  networking_vsphere:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/networking-vsphere"

  neutron:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/neutron"

  neutron_lbaas:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/neutron-lbaas"

  neutron_lbaas_dashboard:
    branch: "hp/prerelease/newton"
    url: "{{ dev_env_default_git_server }}/openstack/neutron-lbaas-dashboard"

  neutron_vpnaas:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/neutron-vpnaas"

  neutron_vpnaas_dashboard:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_git_servers.openstack }}/openstack/neutron-vpnaas-dashboard"

  neutron_fwaas:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/neutron-fwaas"

  neutron_fwaas_dashboard:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_git_servers.openstack }}/openstack/neutron-fwaas-dashboard"

  neutronclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-neutronclient"

  nova:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/nova"

  nova_guestfs: # os specific

  novaclient:
    branch: "hp/prerelease/newton"
    url: "{{ dev_env_default_git_server }}/openstack/python-novaclient"

  octavia:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/octavia"

  oslomessaging:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/oslo.messaging"

  oslovmware:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/oslo.vmware"

  openstackclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-openstackclient"

  packager:
    src: "{{ dev_env_working_dir }}/ansible/library_python/packager"
    ignore_constraints: true

  sos:
    branch: "hp/prerelease/newton"
    url: "{{ dev_env_default_git_server }}/sosreport/sos"

  swift:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/swift"

  swift3:
    branch: "hp/prerelease/newton"
    url: "{{ dev_env_default_git_server }}/openstack/swift3"

  swiftclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-swiftclient"

  swiftlm:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/swiftlm"

  tempest:
    branch: "ardama/master_1c2a802086"
    url: "{{ dev_env_default_git_server }}/openstack/tempest"

  monasca_notification:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/monasca-notification"

  monasca_statsd:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/monasca-statsd"

  monasca_agent:
    branch: "c8"
    url: "https://github.com/ArdanaCLM/monasca-agent"

  monascaclient:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/python-monascaclient"

  monasca_common:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/monasca-common"

  monasca_transform:
    branch: "{{ _venv_openstack_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/openstack/monasca-transform"

  # interim solution before moving to rpm package repo
  monasca_api:
    branch: "c8"
    url: "https://github.com/ArdanaCLM/monasca-api"

  storevirtual-installer:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/storevirtual-installer"

  ardanaqatesthelper:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/ardana-qa-tests"
    sync_dir: ardana-qa-tests-1
    build_dir: "tools/testhelper"

  ardana_qa_tests_example:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/ardana-qa-tests"
    sync_dir: ardana-qa-tests-2
    build_dir: "ardana-qa-tests/example"

  ardana_qa_swift:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/ardana-qa-tests"
    sync_dir: ardana-qa-tests-3
    build_dir: "ardana-qa-tests/swift"

  ardana_qa_logging:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/ardana-qa-tests"
    sync_dir: ardana-qa-tests-4
    build_dir: "ardana-qa-tests/logging"

  ardana_qa_neutron:
    branch: "{{ _venv_service_branch_default }}"
    url: "{{ dev_env_default_git_server }}/ardana/ardana-qa-tests"
    sync_dir: ardana-qa-tests-5
    build_dir: "ardana-qa-tests/neutron"

_venv_ardana_sources: "{{ _venv_ardana_sources_default |
                       update(_venv_ardana_sources_os |
                       default({})) }}"

# List of services and definitions.
_services_default:
  ansible:
    # Ansible's not an openstack project. Don't use the upper-constraints.txt
    #  which cause a conflict during the build of this venv.
    ignore_constraints: true
    pips:
      - "ansible<2.5"
      - passlib
      - netaddr
    # We match ansible 'venv' version to deployer version
    # Note: Not to be confused with real ansible version
    version: "{{ deployer_version }}"

  ardana-service:
    sources:
      - ardana-service
    pips:
      - Flask
      - eventlet
      - flask-socketio
      - flask-cors
      - PyYAML
      - gitpython
      - filelock
      - pbr
    version: "{{ package_version }}"

  barbican:
    sources:
      - certifi
      - oslomessaging
      - logstash_formatter
      - keystoneclient
      - barbicanclient
      - keystonemiddleware
      - barbican:
        - etc
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
      - "{{ product_ardana_venv_deps.ldap_devel }}"
      - "{{ product_ardana_venv_deps.sasl_devel }}"
      - "{{ product_ardana_venv_deps.libpcre_devel }}"
    pips:
      - MySQL-python
      - PyMySQL
      - python-ldap
      - python-memcached
      - pycadf
      - pykmip
      - uwsgi
    version: "{{ package_version }}"

  barbicanclient:
    sources:
      - certifi
      - keystoneclient
      - barbicanclient
    version: "{{ package_version }}"

  ceilometer:
    sources:
      - certifi
      - oslomessaging
      - logstash_formatter
      - keystoneclient
      - ceilometerclient
      - glanceclient
      - neutronclient
      - novaclient
      - swiftclient
      - monascaclient
      - keystonemiddleware
      - ceilometer:
        - etc
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
    pips:
      - MySQL-python
      - python-memcached
    version: "{{ package_version }}"

  ceilometerclient:
    sources:
      - certifi
      - keystoneclient
      - ceilometerclient
    version: "{{ package_version }}"

  monasca_ceilometer:
    sources:
      - monasca_ceilometer
    version: "{{ package_version }}"

  cinder:
    sources:
      - certifi
      - oslomessaging
      - oslovmware
      - logstash_formatter
      - keystoneclient
      - barbicanclient
      - glanceclient
      - novaclient
      - swiftclient
      - ceph_common
      - keystonemiddleware
      - cinder:
        - etc
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
    pips:
      - MySQL-python
      - PyMySQL
      - oslo.log
      - python-3parclient
      - python-lefthandclient
      - python-memcached
      - SQLAlchemy-Utils
    version: "{{ package_version }}"

  cinderclient:
    sources:
      - certifi
      - keystoneclient
      - cinderclient
    version: "{{ package_version }}"

  cinderlm:
    sources:
      - certifi
      - keystoneclient
      - cinderclient
      - swiftclient
      - glanceclient
      - novaclient
      - swiftlm
      - cinderlm
    version: "{{ package_version }}"

  config_processor:
    sources:
      - certifi
      - ardana-config-processor:
        - Data
        - Driver
    pips:
      - PyYAML
    debs:
      - libyaml
    version: "{{ package_version }}"

  designate:
    sources:
      - certifi
      - oslomessaging
      - logstash_formatter
      - keystoneclient
      - neutronclient
      - designateclient
      - keystonemiddleware
      - designate
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
    pips:
      - MySQL-python
      - PyMySQL
      - kazoo
    version: "{{ package_version }}"

  designateclient:
    sources:
      - certifi
      - keystoneclient
      - designateclient
    version: "{{ package_version }}"

  freezer_agent:
    sources:
      - certifi
      - logstash_formatter
      - keystoneclient
      - swiftclient
      - cinderclient
      - novaclient
      - glanceclient
      - neutronclient
      - openstackclient
      - freezer_client
      - freezer_agent
    version: "{{ package_version }}"

  freezer_api:
    sources:
      - certifi
      - oslomessaging
      - logstash_formatter
      - keystoneclient
      - keystonemiddleware
      - freezer_api
    pips:
      - python-memcached
      - pyOpenSSL
    version: "{{ package_version }}"

  glance:
    sources:
      - certifi
      - oslomessaging
      - oslovmware
      - logstash_formatter
      - keystoneclient
      - barbicanclient
      - swiftclient
      - cinderclient
      - glance_store
      - keystonemiddleware
      - glance
      - ceph_common
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
    pips:
      - MySQL-python
      - PyMySQL
      - SQLAlchemy-Utils
      - python-memcached
    version: "{{ package_version }}"

  glanceclient:
    sources:
      - certifi
      - keystoneclient
      - glanceclient
    version: "{{ package_version }}"

  glance-check:
    sources:
      - glance-check
    version: "{{ package_version }}"

  heat:
    sources:
      - certifi
      - oslomessaging
      - logstash_formatter
      - keystoneclient
      - barbicanclient
      - swiftclient
      - glanceclient
      - cinderclient
      - magnumclient
      - neutronclient
      - novaclient
      - ceilometerclient
      - designateclient
      - openstackclient
      - heatclient
      - monascaclient
      - keystonemiddleware
      - heat:
        - etc
        - contrib
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
    pips:
      - MySQL-python
      - PyMySQL
      - docker-py>=0.2.2
      - python-memcached
    version: "{{ package_version }}"

  heatclient:
    sources:
      - certifi
      - keystoneclient
      - cinderclient
      - glanceclient
      - novaclient
      - swiftclient
      - openstackclient
      - heatclient
    version: "{{ package_version }}"

  horizon:
    sources:
      - certifi
      - logstash_formatter
      - keystoneclient
      - ceilometerclient
      - cinderclient
      - designateclient
      - designate_dashboard
      - django_openstack_auth
      - glanceclient
      - neutronclient
      - novaclient
      - swiftclient
      - openstackclient
      - heatclient
      - ironicclient
      - ironic-ui
      - horizon
      - freezer_agent
      - freezer_web_ui
      - magnumclient
      - magnum_ui
      - barbicanclient
      - neutron_lbaas_dashboard
      - neutron_vpnaas_dashboard
      - neutron_fwaas_dashboard
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
    pips:
      - MySQL-python
      - oslo.log
    version: "{{ package_version }}"

  # dev_env_site_config['artefact']['host'] maps to tarballs.suse.provo.cloud,
  # 'artefact' matches the spelling used elsewhere to reference this url
  # as of the most recent versions, tarballs.... is an acceptable source for
  # external content
  installer-ui:
    external:
      - path: http://{{ dev_env_site_config['artefact']['host'] }}/manager-cloud-installer/archive/cloudinstaller-20180118T190245Z-785929/cloudinstaller-20180118T190245Z-785929.tgz
        sha256: 328f716ce1d03ada35a648b6018ca6de35cf1593cf1f76362c29d17f1fa40a52
    version: "{{ package_version }}"

  ironic:
    sources:
      - certifi
      - oslomessaging
      - logstash_formatter
      - keystoneclient
      - neutronclient
      - cinderclient
      - glanceclient
      - novaclient
      - swiftclient
      - openstackclient
      - keystonemiddleware
      - ironic
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
    pips:
      - MySQL-python
      - PyMySQL
      - proliantutils>=2.1.2
      - python-oneviewclient
    version: "{{ package_version }}"

  ironicclient:
    sources:
      - certifi
      - keystoneclient
      - cinderclient
      - glanceclient
      - novaclient
      - openstackclient
      - ironicclient
    pips:
      - ironic-oneview-cli
    version: "{{ package_version }}"

  ironic_deploy_images:
    external:
      - path: /ipa/ironic-deploy-20160609_103319.tgz
        sha256: 22ef4cdd1bc2e97400c59bdd0bc6630136185979a28e5d0ddf606447d0f3bdbe
        dest: ironic-deploy.tgz
    version: "{{ package_version }}"

  keystone:
    sources:
      - certifi
      - oslomessaging
      - logstash_formatter
      - keystoneclient
      - keystonemiddleware
      - keystone:
        - httpd
        - etc
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
      - "{{ product_ardana_venv_deps.ldap_devel }}"
      - "{{ product_ardana_venv_deps.sasl_devel }}"
    pips:
      - MySQL-python
      - PyMySQL
      - python-ldap
      - ldappool
    version: "{{ package_version }}"

  keystoneclient:
    sources:
      - certifi
      - keystoneclient
    version: "{{ package_version }}"

  keystonemiddleware:
    sources:
      - certifi
      - keystoneclient
      - keystonemiddleware
    pips:
      - python-memcached
    version: "{{ package_version }}"

  opsconsole-server:
    sources:
      - certifi
      - opsconsole-server
      - keystoneclient
      - cinderclient
      - neutronclient
      - novaclient
      - monascaclient
      - glanceclient
      - eonclient
      - openstackclient
      - ironicclient
    pips:
      - elasticsearch
      - pecan==0.8.1
      - pika
      - Pykka
      - python-ldap
      - requests
      - stevedore
    version: "{{ package_version }}"

  ops_console_content:
    external:
      - path: /opsconsole-ui/opsconsole-ui-0.6.00-ac399f.tar.gz
        sha256: ba59394b7f2de212bb580c356d27b8ae7f338a081beb3bc17b803cbd39fe961b
    version: "{{ package_version }}"

  magnum:
    sources:
      - certifi
      - oslomessaging
      - keystoneclient
      - cinderclient
      - neutronclient
      - glanceclient
      - swiftclient
      - novaclient
      - openstackclient
      - heatclient
      - barbicanclient
      - keystonemiddleware
      - magnum
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
      - "{{ product_ardana_venv_deps.pkgconfig }}"
    pips:
      - MySQL-python
      - PyMySQL
      - python-logstash
      - python-memcached
      - oslo.log
      - SQLAlchemy-Utils
    version: "{{ package_version }}"

  magnumclient:
    sources:
      - certifi
      - keystoneclient
      - magnumclient
    version: "{{ package_version }}"

  monasca:
    external:
      - path: /monasca-persister/monasca-persister-1.2.1-SNAPSHOT-shaded.jar
        sha256: 7af31f315c921a52257611ccaec68a5134c9875579a9560cc5cc58aeaff7a8a8
        dest: monasca-persister-1.3.0-SNAPSHOT-shaded.jar
      - path: /monasca-thresh/monasca-thresh-2.0.0.5-SNAPSHOT-shaded.jar
        sha256: d34c53627c2bcec8ded61ea15319fd413a4cf3b7f4730cde2452911ad69c55f1
        dest: monasca-thresh-2.0.0-SNAPSHOT-shaded.jar
      - path: /apache/storm/apache-storm-1.0.1.tar.gz
        sha256: 1574c08d8cfb6bc7509c78871e98a535f1386d6ca50fa71c880c39e8800620bf
      - path: /apache/kafka/kafka_2.9.2-0.8.1.1.tgz
        sha256: cb141c1d50b1bd0d741d68e5e21c090341d961cd801e11e42fb693fa53e9aaed
    version: "{{ package_version }}"

  spark:
    external:
      - path: /apache/spark/spark-1.6.1-bin-hadoop2.6.tgz
        sha256: 09f3b50676abc9b3d1895773d18976953ee76945afa72fa57e6473ce4e215970
      - path: /apache/kafka/kafka_2.10-0.8.1.1.tgz
        sha256: 2532af3dbd71d2f2f95f71abff5b7505690bd1f15c7063f8cbaa603b45ee4e86
      - path: /apache/spark/spark-streaming-kafka_2.10-1.6.1.jar
        sha256: 42b03cb48156a582a89878779af1a19035faea1152b63055c9a5246dde842727
      - path: /drizzle/drizzle-jdbc-1.3.jar
        sha256: 87ce35eb55aff5ccffe523bc81889eef1a2edbc3b6a91f5f9e8b8ac4882206ed
      - path: /apache/spark/spark-1.6.3-bin-hadoop2.6.tgz
        sha256: 389e79458ad1d8ad8044643d97304d09bf3ca31f804c386e560033c48123cd69
      - path: /apache/spark/spark-streaming-kafka_2.10-1.6.3.jar
        sha256: eafef0ef1bfd039d50eaacf83b7ff9e1828c52fd5cbb5e54cb526ac6af2b9fdd
    version: "{{ package_version }}"

  neutron:
    sources:
      - certifi
      - oslomessaging
      - oslovmware
      - logstash_formatter
      - keystoneclient
      - barbicanclient
      - networking_vsphere
      - neutron_lbaas
      - neutron_vpnaas
      - neutron_fwaas
      - neutronclient
      - cinderclient
      - glanceclient
      - novaclient
      - openstackclient
      - designateclient
      - networking_l2gw
      - networking_infoblox
      - networking_generic_switch
      - keystonemiddleware
      - neutron
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
    pips:
      - MySQL-python
      - PyMySQL
      - oslo.log
      - python-memcached
      - vmware-nsx==11.0.0
      - vmware-nsxlib==11.0.0
    version: "{{ package_version }}"

  neutronclient:
    sources:
      - certifi
      - oslovmware
      - keystoneclient
      - networking_vsphere
      - oslomessaging
      - neutronclient
      - networking_l2gw
    version: "{{ package_version }}"

  nova:
    sources:
      - certifi
      - oslomessaging
      - logstash_formatter
      - keystoneclient
      - novaclient
      - barbicanclient
      - cinderclient
      - glanceclient
      - openstackclient
      - ironicclient
      - neutronclient
      - swiftclient
      - keystonemiddleware
      - ceph_common
      - nova_guestfs
      - ironic
      - nova
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
      - "{{ product_ardana_venv_deps.libvirt_devel }}"
      - "{{ product_ardana_venv_deps.pkgconfig }}"
    pips:
      - MySQL-python
      - PyMySQL
      - oslo.log
      - oslo.vmware
      - python-memcached
    version: "{{ package_version }}"

  novaclient:
    sources:
      - certifi
      - keystoneclient
      - novaclient
    version: "{{ package_version }}"

  octavia:
    sources:
      - oslomessaging
      - logstash_formatter
      - keystoneclient
      - glanceclient
      - neutronclient
      - novaclient
      - barbicanclient
      - keystonemiddleware
      - octavia
    deps:
      - "{{ product_ardana_venv_deps.db_devel }}"
    pips:
      - MySQL-python
      - PyMySQL
      - SQLAlchemy-Utils
    version: "{{ package_version }}"

  openstackclient:
    sources:
      - certifi
      - heatclient
      - keystoneclient
      - cinderclient
      - glanceclient
      - neutronclient
      - novaclient
      - designateclient
      - barbicanclient
      - openstackclient
    version: "{{ package_version }}"

  packager:
    # Ansible's not an openstack project. Don't use the upper-constraints.txt
    #  which cause a conflict during the build of this venv.
    ignore_constraints: true
    sources:
      - certifi
      - packager
    # We match peckager 'venv' version to deployer version
    version: "{{ deployer_version }}"

  monasca_api:
    sources:
      - certifi
      - keystoneclient
      - monasca_common
      - monascaclient
      - monasca_api
    pips:
      - kafka-python
      - cassandra-driver
    version: "{{ package_version }}"

  monasca_agent:
    sources:
      - certifi
#      - oslovmware
      - keystoneclient
      - neutronclient
      - novaclient
      - monascaclient
      - monasca_agent
      - monasca_common
    pips:
      - kafka-python
      - PyMySQL
      - lxml
      - psutil<3.1.0,>=2.2.1
      - oslo.vmware
    version: "{{ package_version }}"

  monasca_transform:
    sources:
      - certifi
      - monasca_common
      - monasca_transform
    version: "{{ package_version }}"

  monasca_notification:
    sources:
      - certifi
      - monasca_common
      - monasca_statsd
      - monasca_notification
    pips:
      - PyMySQL
      - Jinja2
      - jira
    version: "{{ package_version }}"

  monascaclient:
    sources:
      - certifi
      - keystoneclient
      - monascaclient
    version: "{{ package_version }}"

  beaver:
    sources:
      - keystoneclient
      - beaver
    version: "{{ package_version }}"

  kibana_450:
    external:
      - path: /debian/kibana/kibana_4.5.0_amd64.deb
        sha256: b369090ee3b280fe4da04c7a6c265fb4da73bc1eecbe30043030fe603f2688de
    version: "{{ package_version }}"

  logstash_232:
    external:
      - path: /debian/logstash/logstash_2.3.2-1_all.deb
        sha256: 0104e639580af36cbec46be154714c2d8adb42b3afef1ce2cac715c3d0f8a241
    version: "{{ package_version }}"

  elasticsearch_235:
    external:
      - path: /debian/elasticsearch/elasticsearch-2.3.5.deb
        sha256: 9fd12eca701ccd7a1ae5767187882327262717154ba1fb7eab3c3a653874d3fb
    version: "{{ package_version }}"

  kronos:
    sources:
      - certifi
      - monasca_common
      - monasca_statsd
      - logstash_formatter
      - kronos
    pips:
      - kafka-python
      - keystonemiddleware
    version: "{{ package_version }}"

  sos:
    sources:
      - sos
    deps:
      - gettext
    pips:
      - six
    version: "{{ package_version }}"

  swift:
    sources:
      - certifi
      - keystoneclient
      - neutronclient
      - swift
      - swiftclient
      - keystonemiddleware
      - swift3
    version: "{{ package_version }}"

  swiftclient:
    sources:
      - certifi
      - keystoneclient
      - swiftclient
    version: "{{ package_version }}"

  swiftlm:
    sources:
      - certifi
      - keystoneclient
      - swiftclient
      - swift
      - swiftlm
    pips:
      - psutil<3.1.0,>=2.2.1
    version: "{{ package_version }}"

  storevirtual-installer:
    sources:
      - certifi
      - storevirtual-installer
    version: "{{ package_version }}"

  tempest:
    sources:
      - certifi
      - oslomessaging
      - keystonemiddleware
      - neutron
      - neutron_lbaas
      - tempest
      - designate_tempest_plugin
      - heat_tempest_plugin
      - barbican_tempest_plugin
    pips:
      - ddt # neutron-vpnaas and neutron-fwaas
      - urllib3==1.16 # BUG-4232
      - testscenarios # needed by neutron tempest tests
      - python-barbicanclient
      - python-ceilometerclient
      - python-cinderclient
      - python-designateclient
      - python-glanceclient
      - python-heatclient
      - python-ironicclient
      - python-keystoneclient
      - python-openstackclient
      - python-novaclient
      - python-neutronclient
      - python-swiftclient
    version: "{{ package_version }}"

  ardana_qa_tests_example:
    sources:
      - certifi
      - keystoneclient
      - cinderclient
      - glanceclient
      - neutronclient
      - novaclient
      - openstackclient
      - monascaclient
      - ardana_qa_tests_example
    version: "{{ package_version }}"

  ardana_qa_swift:
    sources:
      - certifi
      - ardanaqatesthelper
      - ardana_qa_swift
      - tempest
    pips:
      - urllib3==1.16 # BUG-4232
    version: "{{ package_version }}"

  ardana_qa_logging:
    sources:
      - certifi
      - ardanaqatesthelper
      - ardana_qa_logging
      - tempest
    pips:
      - urllib3==1.16 # BUG-4232
    version: "{{ package_version }}"

  ardana_qa_neutron:
    sources:
      - certifi
      - keystoneclient
      - cinderclient
      - glanceclient
      - neutronclient
      - novaclient
      - openstackclient
      - ardana_qa_neutron
    version: "{{ package_version }}"

services: "{{ _services_default |
              update(services_os | default({})) |
              update(services_update | default({})) }}"
